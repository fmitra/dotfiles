# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Set colors
set -g default-terminal "screen-256color"

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# set the basic color scheme
set -g pane-border-fg colour250
set -g pane-border-bg colour236
set -g pane-active-border-fg colour250 
set -g status-fg white

# set colors for status bar and pane highlights
# 200 / 175 pink
# 196 / 160 red
# 057 / 069 purple
# 021 / 033 blue
set -g status-bg colour200
set -g pane-active-border-bg colour175

# enable pane resizing via mouse
set -g mode-mouse on
set -g mouse-resize-pane on
set-option -g mouse on

# Alignment for status bar
set-option -g status-justify centre

# Make new panes default to current workiing dir
bind c new-window -c "#{pane_current_path}"
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
